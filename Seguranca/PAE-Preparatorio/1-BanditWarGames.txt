1---------------------------------------------------
 1.1 ssh bandit0@bandit.labs.overthewire.org -p 2220
 1.2  bandit0

NH2SXQwcBdpmTEzi3bvBHMM9H66vVXjL

2----------------------------------------------------
 2.1 ssh bandit1@bandit.labs.overthewire.org -p 2220
 2.2 NH2SXQwcBdpmTEzi3bvBHMM9H66vVXjL
 2.3 cat ./-

 rRGizSaX8Mk1RTb1CNQoXTcYZWU6lgzi

3----------------------------------------------------
3.1 ssh bandit2@bandit.labs.overthewire.org -p 2220
3.2 rRGizSaX8Mk1RTb1CNQoXTcYZWU6lgzi
3.3 cat spaces\ in\ this\ filename  ou cat "spaces in this filename"

aBZ0W5EmUfAf7kHTQeOwd8bauFJ2lAiG

4----------------------------------------------------
4.1 ssh bandit3@bandit.labs.overthewire.org -p 2220
4.2 aBZ0W5EmUfAf7kHTQeOwd8bauFJ2lAiG
4.3 cd inhere
4.4 cat .hideen

2EW7BBsr6aMMoJ2HjW067dm8EgX26xNe

5----------------------------------------------------
5.1 ssh bandit4@bandit.labs.overthewire.org -p 2220
5.2 2EW7BBsr6aMMoJ2HjW067dm8EgX26xNe
5.3 ls -l
5.4 cd inhere/
5.5 file ./*    (exibe o tipo de arquivos existentes no diretorio)
5.5 cat ./-file07

lrIWWI6bB37kxfiCQZqUdOIYfr6eEeqR

6----------------------------------------------------
6.1 ssh bandit5@bandit.labs.overthewire.org -p 2220
6.2 lrIWWI6bB37kxfiCQZqUdOIYfr6eEeqR
6.3 find . -type f -readable ! -executable -size 1033c 
(f             -> so pega files, 
-readable      -> so arquivos que o usuario atual tem permissao de leitura, 
! executable   -> arquivos que nao sao executaveis, 
-size 1033c    -> 1033bytes)

OBS: o bandit esta errado pois eh falado um usuario e um grupo que ao corresponde com oq se encontra no servidor)

6.4 cat ./maybehere07/.file2

6.5 P4L4vucdmLnm8I7Vl7jG1ApGSfjYKqJU

7----------------------------------------------------
7.1 ssh bandit6@bandit.labs.overthewire.org -p 2220
7.2 P4L4vucdmLnm8I7Vl7jG1ApGSfjYKqJU

7.3 find / -type f -user bandit7 -group bandit6 -size 33c 2> /dev/null
(f                      -> so pega files,
-user <Nomeusuario>     -> especifica o nome do detentor do arquivo,
-group <Nomeusuario>    -> especifica o nome do grupo que o detentor do arquivo pertence,
2> /dev/null            -> Ao redirecionar o fluxo de erro para /dev/null, essas mensagens são "jogadas fora" e não aparecem na saída padrão ou na tela. Você ainda precisa especificar o número 2 para indicar que está redirecionando o fluxo de erro(stderr), caso contrário, o redirecionamento será aplicado ao fluxo padrão de saída (stdout).)

7.4 z7WtoNQU2XfjmMtWA8u5rN4vzqu4v99S

8----------------------------------------------------
8.1 ssh bandit7@bandit.labs.overthewire.org -p 2220
8.2 z7WtoNQU2XfjmMtWA8u5rN4vzqu4v99S
8.3 cat data.txt | grep "millionth"
("-i" ou "--ignore-case": Ignora a diferenciação entre letras maiúsculas e minúsculas, permitindo que a pesquisa seja feita sem levar em conta a capitalização das letras.
"-v" ou "--invert-match": Inverte a pesquisa, retornando todas as linhas que não contêm o padrão de texto especificado.
"-c" ou "--count": Retorna o número de ocorrências do padrão de texto em vez de exibir as linhas correspondentes.
"-n" ou "--line-number": Exibe o número de linha antes de cada linha correspondente ao padrão de texto.
"-r" ou "--recursive": Realiza uma pesquisa recursiva em todos os subdiretórios dentro do diretório especificado)

(OBS: head -n <n> <arquivo>   -> faz um cat do arquivo so que especifica para mostrar somente as n primeiras linhas)
(OBS: tail -n <n> <arquivo>   -> faz um cat do arquivo so que especifica para mostrar somente as n primeiras linhas)

8.4 TESKZC0XvTetK0S9xNwm25STk5iWrBvP

9----------------------------------------------------
9.1 ssh bandit8@bandit.labs.overthewire.org -p 2220
9.2 TESKZC0XvTetK0S9xNwm25STk5iWrBvP
9.3 cat data.txt | sort | uniq -u

(OBS: sort --> organiza os dados em ordem alfabetica)
(OBS: uniq --> pega o arquivo e exibe todas as linhas, porem se duas ou mais linhas forem CONSECUTIVAS ele somente retorna uma delas
u --> pega o arquivo e exibe somente as linhas que nao se repetem, porém essas linhas precisam ser CONSECUTIVAS, PORTANTO se quisermos eliminar todas as linhas que se repetem, junatamos o sort com o uniq -u)

9.4 EN632PlfYiZbn3PhVK3XOGSlNInNE00t

10----------------------------------------------------
10.1 ssh bandit9@bandit.labs.overthewire.org -p 2220
10.2 EN632PlfYiZbn3PhVK3XOGSlNInNE00t

10.3 cat data.txt | strings -e s | grep ==
10.4 grep -a "==" data.txt

(OBS: 
grep                     --> Se eu usar somente o grep, nao ira funcionar, pois o grep so lida com arquivos nao binarios, entretanto quando colocamos o -a, obrigamos ele a tratar um arquivo como um texto, entretanto, ja q ele pega as linhas, o resultado eh estranha
strings -e <codificação> --> Analisa o arquivo inteiro e somente retorna a parte que correspondecom a codificação passada, ainda com o comando grep, filtramos mais ainda para oq queremos
xxd -b <arquivo>         --> Pega um arquivo binario e ao inves de mostrar ele c caracteres que talvez possamos ver ele retorna com 0 e 1.
)

10.5 G7w8LIi6J3kTb8A7j9LgrywtEUlyyp6s

11----------------------------------------------------
11.1 ssh bandit10@bandit.labs.overthewire.org -p 2220
11.2 G7w8LIi6J3kTb8A7j9LgrywtEUlyyp6s
11.4 base64 -d data.txt | cat 
OU 
cat data.txt | base64 -d

(OBS: Normalmente, os dados binários são representados em formato hexadecimal ou em formato binário (0s e 1s). Porém, quando esses dados precisam ser transmitidos ou armazenados em um formato que não suporta caracteres especiais, como por exemplo um email, eles são codificados em formato Base64)

Para Transformar:
ASCII  --> Base64: base64 -i    <arquivo> > <NovoArquivo>
Base64 -->  ASCII: base64 -d -i <arquivo> > <NovoArquivo>


11.3 6zPeziLdR2RKNdNYFNb6nVCKzphlXHBM
